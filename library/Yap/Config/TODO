TODO

- Создать xml парсер с возможностью парсить структуру

    <?xml version="1.0" encoding="UTF-8"?>
    <root xmlns:yap="http://yap.ncwlife.ru">
        <public>
            <varName>var value</varName>
            <varName2 value="var value 2" />
            <item name="varName3">var value 3</item>

            <items>
                <varName>var value</varName>

                <item name="arrayItem" key="1">array item value 1</item>
                <item name="arrayItem" key="2">array item value 2</item>
                <arrayItem key="3">array item value 3</arrayItem>
            </items>
        </public>

        <debug extends="public">
            <varName>debug var name</varName>
            <items>
                <arrayItem key="2" value="debug array item value 2" />
            </items>
        </debug>

        <test>
            <varName><yap:const yap:name="MY_CONST" /></varName>
        </test>
    </root>


    var_dump пропарсенного файла имеет вид

    array(3) {
        ["public"]=>
        array(4) {
            ["varName"]=>
            string(9) "var value"
            ["varName2"]=>
            string(11) "var value 2"
            ["varName3"]=>
            string(11) "var value 3"
            ["items"]=>
            array(2) {
                ["varName"]=>
                string(9) "var value"
                ["arrayItem"]=>
                array(3) {
                    [1]=>
                    string(18) "array item value 1"
                    [2]=>
                    string(18) "array item value 2"
                    [3]=>
                    string(18) "array item value 3"
                }
            }
        }
        ["debug"]=>
        array(4) {
            ["varName"]=>
            string(14) "debug var name"
            ["varName2"]=>
            string(11) "var value 2"
            ["varName3"]=>
            string(11) "var value 3"
            ["items"]=>
            array(2) {
                ["varName"]=>
                string(9) "var value"
                ["arrayItem"]=>
                array(3) {
                    [1]=>
                    string(18) "array item value 1"
                    [2]=>
                    string(24) "debug array item value 2"
                    [3]=>
                    string(18) "array item value 3"
                }
            }
        }
        ["test"]=>
        array(1) {
            ["varName"]=>
            string(0) ""
        }
    }


    Эквивалент в php

    array (
        "public" => array(
            "varName" => "var value",
            "varName2" => "var value 2",
            "varName3" => "var value 3",
            "items" => array(
                "varName" => "var value",
                "arrayItem" => array(
                    1 => "array item value 1",
                    2 => "array item value 2",
                    3 => "array item value 3"
                )
            )
        )
        "debug" => array(
            "varName" => "debug var name",
            "varName2" => "var value 2",
            "varName3" => "var value 3",
            "items" => array(
                "varName" => "var value",
                "arrayItem" => array(
                    1 => "array item value 1",
                    2 => "debug array item value 2",
                    3 => "array item value 3"
                )
            )
        )
        "test" => array(
            'varName' => MY_CONST
        )
    )

    Эквивалент в ini

    [public]
    varName = "var value"
    varName2 = "var value 2"
    varName3 = "var value 3"
    items.varName = "var value"
    items.arrayItem.1 = "array item value 1"
    items.arrayItem.2 = "array item value 2"
    items.arrayItem.3 = "array item value 3"

    [debug:publuc]
    varName = "debug var name"
    items.arrayItem.2 = "debug array item value 2"

    [test]
    varName = MY_CONST


- Возможность узкаывать php константы определенные через define