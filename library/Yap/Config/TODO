TODO

- Создать xml парсер с возможностью парсить структуру

    <root>
        <public>
            <varName>var value</varName>
            <varName2 value="var value 2" />
            <item name="varName3>var value 3</item>

            <items>
                <varName>var value</varName>

                <item name="arrayItem" key="1">array item value 1</item>
                <item name="arrayItem" key="2">array item value 2</item>
                <arrayItem key="3">array item value 3</arrayItem>
            </items>
        </public>

        <debug extends="public">
            <varName>debug var name</varName>
            <items>
                <arrayItem key="2" value="debug array item value 2</arrayItem>
            </items>
        </debug>

        <test extends="public">
            <items value="false" type="bool" />
            <clearArray type="array"></clearArrray>
        </test>
    </root>


    var_dump пропарсенного файла имеет вид

    array(3) {
        ["public"]=>
        array(4) {
            ["varName"]=>
            string(9) "var value"
            ["varName2"]=>
            string(11) "var value 2"
            ["varName3"]=>
            string(11) "var value 3"
            ["items"]=>
            array(2) {
                ["varName"]=>
                string(8) "var name"
                ["arrayItem"]=>
                array(3) {
                    [1]=>
                    string(18) "array item value 1"
                    [2]=>
                    string(18) "array item value 2"
                    [3]=>
                    string(18) "array item value 3"
                }
            }
        }
        ["debug"]=>
        array(4) {
            ["varName"]=>
            string(15) "debug var value"
            ["varName2"]=>
            string(11) "var value 2"
            ["varName3"]=>
            string(11) "var value 3"
            ["items"]=>
            array(2) {
                ["varName"]=>
                string(8) "var name"
                ["arrayItem"]=>
                array(3) {
                    [1]=>
                    string(18) "array item value 1"
                    [2]=>
                    string(24) "debug array item value 2"
                    [3]=>
                    string(18) "array item value 3"
                }
            }
        }
        ["test"]=>
        array(5) {
            ["varName"]=>
            string(9) "var value"
            ["varName2"]=>
            string(11) "var value 2"
            ["varName3"]=>
            string(11) "var value 3"
            ["items"]=>
            bool(false)
            ["clearArray"]=>
            array(0)
        }
    }

    Эквивалент в php

    array(
        'public' => array(
            'varName'   => 'var value',
            'varName2'  => 'var value 2',
            'varName3'  => 'var value 3',

            'items' => array(
                'varName' => 'var name',

                'arrayItem' => array(
                    1 => 'array item value 1',
                    2 => 'array item value 2',
                    3 => 'array item value 3'
                )
            )
        ),

        'debug' => array(
            'varName'   => 'debug var value',
            'varName2'  => 'var value 2',
            'varName3'  => 'var value 3',

            'items' => array(
                'varName' => 'var name',

                'arrayItem' => array(
                    1 => 'array item value 1',
                    2 => 'debug array item value 2',
                    3 => 'array item value 3'
                )
            )
        ),

        'test' => array(
            'varName'   => 'var value',
            'varName2'  => 'var value 2',
            'varName3'  => 'var value 3',

            'items'     => false,

            'clearArray' => array()
        ),
    )

